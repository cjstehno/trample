plugins {
    id 'java-library'
    id "com.github.hierynomus.license" version '0.16.1'
    id 'com.github.ben-manes.versions' version '0.41.0'
    id 'jacoco'
}

group = rootProject.group
version = rootProject.version

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    // production
    implementation project(':trample-parser')
    
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    
    implementation 'org.slf4j:slf4j-api:1.7.33'

    // testing

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.10'
    
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation 'org.mockito:mockito-junit-jupiter:4.2.0'

    testImplementation 'org.awaitility:awaitility:4.1.1'
}

test {
    useJUnitPlatform()
    maxParallelForks = Math.min(Runtime.runtime.availableProcessors(), 8)
}

jacocoTestReport {
    dependsOn test
}

license {
    header = file('../config/license_header.txt')

    ignoreFailures false

    ext.year = Calendar.instance.get(Calendar.YEAR)

    excludes(['**/*.txt', '**/*.dtd', '**/*.xml', '**/*.ent', '**/*.jks', '**/*.jpg'])
}

